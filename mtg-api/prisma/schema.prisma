generator client {
provider = "prisma-client-js"
binaryTargets = ["native", "linux-musl-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String   @id @default(uuid())
  name          String?
  email         String   @unique
  password      String
  role          Role     @default(USER)
  created_at    DateTime @default(now())
  updated_at    DateTime @updatedAt
  Deck Deck[]
}

model Deck {
  id         String   @id @default(uuid())
  name       String
  user       User     @relation(fields: [user_id], references: [id], onDelete: Cascade)
  user_id    String
  cards      CardDeck[] 
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}

model Card {
  id                String    @id @default(cuid())
  name              String    
  released_date     DateTime  
  mana_cost         String
  type              String
  text              String
  power             Int?
  toughness         Int?
  colors            String[]
  cmc               Int
  rarity            Rarity
  price_in_usd      Float
  foil_price_in_usd Float
  decks             CardDeck[] 
}

model CardDeck {
  deck   Deck   @relation(fields: [deck_id], references: [id], onDelete: Cascade)
  deck_id String

  card   Card   @relation(fields: [card_id], references: [id], onDelete: Cascade)
  card_id String

  @@id([deck_id, card_id]) 
}

enum Role {
  ADMIN
  USER
}

enum Rarity {
  COMMON
  UNCOMMON
  RARE
  MYTHIC
}
